/*
 * Hello Service
 *
 * A hello world service.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// HelloApiService is a service that implements the logic for the HelloApiServicer
// This service should implement the business logic for every endpoint for the HelloApi API.
// Include any external packages or services that will be required by this service.
type HelloApiService struct {
}

// NewHelloApiService creates a default api service
func NewHelloApiService() HelloApiServicer {
	return &HelloApiService{}
}

// HelloHello - hello hello
func (s *HelloApiService) HelloHello(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update HelloHello with the required logic for this service method.
	// Add api_hello_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, string{}) or use other options such as http.Ok ...
	//return Response(200, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("HelloHello method not implemented")
}

// HelloOpenapiJson - Download ./gen/http/openapi.json
func (s *HelloApiService) HelloOpenapiJson(ctx context.Context) (ImplResponse, error) {
	// TODO - update HelloOpenapiJson with the required logic for this service method.
	// Add api_hello_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("HelloOpenapiJson method not implemented")
}
